global function POIPlayerSpawning_Init













const string 	CURATED_SPAWNPOINT_CLASSNAME 		= "info_poispawning_squadspawn"
const string 	CURATED_SPAWNPOINT_SCRIPTNAME 		= "poispawning_curated_spawn"
const float 	POISPAWN_SQUADS_MINDISTANCE 		= 3937.01 * 2.0 
const float 	POISPAWN_CURATEDSPAWNS_MINDISTANCE 	= 3937.01 * 1.0 
const int 		POISPAWN_MAX_SPAWNPOINTS_PER_ZONE 	= 12
const float 	POISPAWN_GROUPRADIUS 				= 64
const float		POISPAWN_CLEARING_DISTANCE 			= 96 
const float 	POISPAWN_AIRDROPHEIGHT 				= 15200
const float 	POISPAWN_GROUNDSPAWNHEIGHT 			= 128
const int		SQUADS_PERGROUP_DEFAULT 			= 2

#if DEV
const FORCEDEBUG = false
#endif



struct
{















































} file











































































































#if DEV
void function DEVSphere( bool debugParm, vector center, float radius, vector color, bool bShowThruGeo, float showTime, int segments = 4 )
{
	bool doDebug = debugParm || FORCEDEBUG
	if( doDebug )
	{
		DebugDrawSphere( center, radius, color, bShowThruGeo, showTime, segments )
	}
}

void function DEVCube( bool debugParm, vector center, float size, vector color, bool bShowThruGeo, float showTime )
{
	bool doDebug = debugParm || FORCEDEBUG
	if( doDebug )
	{
		DebugDrawCube( center, size, color, bShowThruGeo, showTime )
	}
}

void function DEVLine( bool debugParm, vector start, vector end, vector color, bool showThruGeo, float showTime )
{
	bool doDebug = debugParm || FORCEDEBUG
	if( doDebug )
	{
		DebugDrawLine( start, end, color, showThruGeo, showTime )
	}
}

void function DEVPrint( bool debugParm, string str )
{
	bool doDebug = debugParm || FORCEDEBUG
	if( doDebug )
	{
		printt( str )
	}
}
#endif







bool function PLV_RandomSpawnPoints()
{
	return( GetCurrentPlaylistVarBool( "poiplayerspawning_randompoints", true ))
}


bool function PLV_Airdrop()
{
	return( GetCurrentPlaylistVarBool( "poiplayerspawning_airdrop", true ))
}


float function PLV_Airdrop_Height()
{
	return( GetCurrentPlaylistVarFloat( "poiplayerspawning_airdrop_height", POISPAWN_AIRDROPHEIGHT ))
}

bool function PLV_DropShipJump()
{
	return( GetCurrentPlaylistVarBool( "poiplayerspawning_dropshipjump", true ) )
}

bool function PLV_PingPairedEnemyOnLanding()
{
	return( GetCurrentPlaylistVarBool( "poiplayerspawning_pingpairedenemyonlanding", true ) )
}


int function PLV_TeamsPerGroup()
{
	return( GetCurrentPlaylistVarInt( "poiplayerspawning_teamspergroup", SQUADS_PERGROUP_DEFAULT ))
}

float function PLV_SquadsMinDistance()
{
	return( GetCurrentPlaylistVarFloat( "poiplayerspawning_squadsmindistance", POISPAWN_SQUADS_MINDISTANCE ) )
}

bool function PLV_UseCuratedSpawns()
{
	return( GetCurrentPlaylistVarBool( "poiplayerspawning_usecuratedspawns", true ) )
}

bool function PLV_SpawnWithFreefall()
{
	return( GetCurrentPlaylistVarBool( "poiplayerspawning_spawnwithfreefall", true ) )
}







































































































































void function POIPlayerSpawning_Init()
{



}































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































